---
source: crates/compiler/src/analysis/free_dead_resources.rs
expression: "format!(\"{}\", ir_program)"
---
IR:
fn 17:
block_6
0: 7_val = fnarg
1: 8_len = fnarg
2: 9_anonymous := Int(1)
3: borrow(9_anonymous)
4: 10_anonymous := "w"
5: borrow(10_anonymous)
6: receiver_Ssaid(11) = @0( let 9_anonymous, let 10_anonymous,)
7: borrow_end(9_anonymous)
8: borrow_end(10_anonymous)
9: 12_stdoutptr = 11_fdopen_result
10: drop(9_anonymous)
11: move(11_fdopen_result)
12: drop(10_anonymous)
13: borrow(7_val)
14: borrow(8_len)
15: 13_anonymous := Int(1)
16: borrow(13_anonymous)
17: borrow(12_stdoutptr)
18: receiver_Ssaid(14) = @2( let 7_val, let 8_len, let 13_anonymous, let 12_stdoutptr,)
19: borrow_end(7_val)
20: drop(7_val)
21: borrow_end(8_len)
22: drop(8_len)
23: drop(14_fwrite_result)
24: borrow_end(13_anonymous)
25: borrow_end(12_stdoutptr)
26: drop(13_anonymous)
27: drop(12_stdoutptr)
28: return

fn 39:
block_15
0: 16_anonymous := "test"
1: 17_val = 16_anonymous
2: drop(17_val)
3: move(16_anonymous)
4: 18_anonymous := Int(0)
5: 19_i = 18_anonymous
6: move(18_anonymous)
7: While block_BlockId(20)  { block_BlockId(23) }

block_20
0: 21_anonymous := Int(10)
1: 22_@less_than_result = 19_i < 21_anonymous
2: move(19_i)
3: move(21_anonymous)

block_23
0: 24_anonymous := "test2"
1: 25_val = 24_anonymous
2: move(24_anonymous)
3: 26_anonymous := Int(1)
4: 27_@addition_result = 19_i + 26_anonymous
5: move(19_i)
6: move(26_anonymous)
7: 19_i = 27_@addition_result
8: move(27_@addition_result)
9: move(25_val)
10: borrow(19_i)
11: @42( owned 25_val, let 19_i,)
12: borrow_end(19_i)

block_28
0: drop(19_i)
1: return

fn 42:
block_29
0: 30_input = fnarg
1: 31_j = fnarg
2: return
