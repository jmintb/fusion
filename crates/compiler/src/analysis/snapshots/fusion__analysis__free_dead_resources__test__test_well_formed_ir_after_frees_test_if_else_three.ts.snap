---
source: crates/compiler/src/analysis/free_dead_resources.rs
expression: "format!(\"{}\", ir_program)"
---
IR:
fn 17:
block_4
0: 5_val = fnarg
1: 6_len = fnarg
2: 7_anonymous := Int(1)
3: borrow(7_anonymous)
4: 8_anonymous := "w"
5: borrow(8_anonymous)
6: receiver_Ssaid(9) = @0( let 7_anonymous, let 8_anonymous,)
7: borrow_end(7_anonymous)
8: borrow_end(8_anonymous)
9: 10_stdoutptr = 9_fdopen_result
10: drop(7_anonymous)
11: move(9_fdopen_result)
12: drop(8_anonymous)
13: borrow(5_val)
14: borrow(6_len)
15: 11_anonymous := Int(1)
16: borrow(11_anonymous)
17: borrow(10_stdoutptr)
18: receiver_Ssaid(12) = @2( let 5_val, let 6_len, let 11_anonymous, let 10_stdoutptr,)
19: borrow_end(5_val)
20: drop(5_val)
21: borrow_end(6_len)
22: drop(6_len)
23: drop(12_fwrite_result)
24: borrow_end(11_anonymous)
25: borrow_end(10_stdoutptr)
26: drop(11_anonymous)
27: drop(10_stdoutptr)
28: return

fn 35:
block_13
0: 14_anonymous := "222"
1: 15_test = 14_anonymous
2: move(14_anonymous)
3: 16_anonymous := Int(1)
4: 17_anonymous := Int(0)
5: 18_@less_than_result = 16_anonymous < 17_anonymous
6: move(16_anonymous)
7: move(17_anonymous)
8: if 18_@less_than_result then 19_block else 21_block

block_19
0: move(15_test)
1: @38( owned 15_test,)

block_21
0: borrow(15_test)
1: 22_anonymous := Int(3)
2: borrow(22_anonymous)
3: @17( let 15_test, let 22_anonymous,)
4: borrow_end(15_test)
5: borrow_end(22_anonymous)
6: drop(22_anonymous)

block_20
0: borrow(15_test)
1: @41( let 15_test,)
2: borrow_end(15_test)
3: drop(15_test)
4: return

block_20
0: borrow(15_test)
1: @41( let 15_test,)
2: borrow_end(15_test)
3: drop(15_test)
4: return

fn 38:
block_23
0: 24_test = fnarg
1: return

fn 41:
block_25
0: 26_test = fnarg
1: return
