---
source: src/analysis/free_dead_resources.rs
expression: "format!(\"{}\", ir_program)"
---
IR:
fn 17:
block_1
0: 2_val = fnarg
1: 3_len = fnarg
2: 4_anonymous := Int(1)
3: borrow(4_anonymous)
4: 5_anonymous := "w"
5: borrow(5_anonymous)
6: receiver_SSAID(6) = @0( let 4_anonymous, let 5_anonymous,)
7: borrow_end(4_anonymous)
8: borrow_end(5_anonymous)
9: 7_stdoutptr = 6_fdopen_result
10: drop(4_anonymous)
11: move(6_fdopen_result)
12: drop(5_anonymous)
13: borrow(2_val)
14: borrow(3_len)
15: 8_anonymous := Int(1)
16: borrow(8_anonymous)
17: borrow(7_stdoutptr)
18: receiver_SSAID(9) = @2( let 2_val, let 3_len, let 8_anonymous, let 7_stdoutptr,)
19: borrow_end(2_val)
20: drop(2_val)
21: borrow_end(3_len)
22: drop(3_len)
23: drop(9_fwrite_result)
24: borrow_end(8_anonymous)
25: borrow_end(7_stdoutptr)
26: drop(8_anonymous)
27: drop(7_stdoutptr)
28: return

fn 38:
block_10
0: 11_anonymous := Int(0)
1: 12_i = 11_anonymous
2: move(11_anonymous)
3: While block_BlockId(13)  { block_BlockId(16) }

block_13
0: 14_anonymous := Int(2)
1: 15_@less_than_result = 12_i < 14_anonymous
2: move(12_i)
3: move(14_anonymous)

block_16
0: 17_anonymous := "test"
1: 18_test = 17_anonymous
2: move(17_anonymous)
3: borrow(18_test)
4: @44( let 18_test,)
5: borrow_end(18_test)
6: 19_anonymous := Int(1)
7: 20_@addition_result = 12_i + 19_anonymous
8: move(12_i)
9: move(19_anonymous)
10: 12_i = 20_@addition_result
11: move(20_@addition_result)

block_21
0: drop(12_i)
1: borrow(18_test)
2: @44( let 18_test,)
3: drop(18_test)
4: borrow_end(18_test)
5: return

fn 41:
block_22
0: 23_test = fnarg
1: return

fn 44:
block_24
0: 25_test = fnarg
1: return
