---
source: crates/compiler/src/ir.rs
expression: "format!(\"{}\", ir_progam)"
---
IR:
fn 17:
block_6
0: 7_val = fnarg
1: 8_len = fnarg
2: 9_anonymous := Int(1)
3: borrow(9_anonymous)
4: 10_anonymous := "w"
5: borrow(10_anonymous)
6: receiver_Ssaid(11) = @0( let 9_anonymous, let 10_anonymous,)
7: borrow_end(9_anonymous)
8: borrow_end(10_anonymous)
9: 12_stdoutptr = 11_fdopen_result
10: move(11_fdopen_result)
11: borrow(7_val)
12: borrow(8_len)
13: 13_anonymous := Int(1)
14: borrow(13_anonymous)
15: borrow(12_stdoutptr)
16: receiver_Ssaid(14) = @2( let 7_val, let 8_len, let 13_anonymous, let 12_stdoutptr,)
17: borrow_end(7_val)
18: borrow_end(8_len)
19: borrow_end(13_anonymous)
20: borrow_end(12_stdoutptr)
21: return

fn 28:
block_15
0: 16_anonymous := Int(2)
1: 17_a = 16_anonymous
2: move(16_anonymous)
3: 18_anonymous := Int(3)
4: 19_b = 18_anonymous
5: move(18_anonymous)
6: 20_@addition_result = 17_a + 19_b
7: move(17_a)
8: move(19_b)
9: 21_result = 20_@addition_result
10: move(20_@addition_result)
11: return
