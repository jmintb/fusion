---
source: crates/compiler/src/ir.rs
expression: "format!(\"{}\", ir_progam)"
---
IR:
fn 17:
block_5
0: 6_val = fnarg
1: 7_len = fnarg
2: 8_anonymous := Int(1)
3: borrow(8_anonymous)
4: 9_anonymous := "w"
5: borrow(9_anonymous)
6: receiver_Ssaid(10) = @0( let 8_anonymous, let 9_anonymous,)
7: borrow_end(8_anonymous)
8: borrow_end(9_anonymous)
9: 11_stdoutptr = 10_fdopen_result
10: move(10_fdopen_result)
11: borrow(6_val)
12: borrow(7_len)
13: 12_anonymous := Int(1)
14: borrow(12_anonymous)
15: borrow(11_stdoutptr)
16: receiver_Ssaid(13) = @2( let 6_val, let 7_len, let 12_anonymous, let 11_stdoutptr,)
17: borrow_end(6_val)
18: borrow_end(7_len)
19: borrow_end(12_anonymous)
20: borrow_end(11_stdoutptr)
21: return

fn 44:
block_14
0: 15_anonymous := "test"
1: 16_val = 15_anonymous
2: move(15_anonymous)
3: 17_anonymous := Int(0)
4: 18_i = 17_anonymous
5: move(17_anonymous)
6: 21_anonymous := "hello\n"
7: 22_anonymous := "world\n"
8: move(21_anonymous)
9: move(22_anonymous)
10: array_init_result_Ssaid(20) = InitArray[ 21_anonymous, 22_anonymous,]
11: 23_values = 20_@array_init_result
12: move(20_@array_init_result)
13: While block_BlockId(24)  { block_BlockId(27) }

block_24
0: 25_anonymous := Int(2)
1: 26_@less_than_result = 18_i < 25_anonymous
2: move(18_i)
3: move(25_anonymous)

block_27
0: borrow(16_val)
1: @47( let 16_val,)
2: borrow_end(16_val)
3: move(18_i)
4: move(23_values)
5: array_lookup_result_Ssaid(28) = ArrayLookup( 23_values, 18_i, 28_@array_lookup_result,)
6: borrow(28_@array_lookup_result)
7: 29_anonymous := Int(6)
8: borrow(29_anonymous)
9: @17( let 28_@array_lookup_result, let 29_anonymous,)
10: borrow_end(28_@array_lookup_result)
11: borrow_end(29_anonymous)
12: 30_anonymous := Int(1)
13: 31_@addition_result = 18_i + 30_anonymous
14: move(18_i)
15: move(30_anonymous)
16: 18_i = 31_@addition_result
17: move(31_@addition_result)

block_32
0: return

fn 47:
block_33
0: 34_v = fnarg
1: return
