---
source: src/ir.rs
expression: "format!(\"{}\", ir_progam)"
---
IR:
fn 17:
block_1
0: 2_val = fnarg
1: 3_len = fnarg
2: 4_anonymous := Int(1)
3: borrow(4_anonymous)
4: 5_anonymous := "w"
5: borrow(5_anonymous)
6: receiver_SSAID(6) = @0( let 4_anonymous, let 5_anonymous,)
7: borrow_end(4_anonymous)
8: borrow_end(5_anonymous)
9: 7_stdoutptr = 6_fdopen_result
10: move(6_fdopen_result)
11: borrow(2_val)
12: borrow(3_len)
13: 8_anonymous := Int(1)
14: borrow(8_anonymous)
15: borrow(7_stdoutptr)
16: receiver_SSAID(9) = @2( let 2_val, let 3_len, let 8_anonymous, let 7_stdoutptr,)
17: borrow_end(2_val)
18: borrow_end(3_len)
19: borrow_end(8_anonymous)
20: borrow_end(7_stdoutptr)
21: return

fn 36:
block_10
0: 11_anonymous := "some str"
1: 12_test_val = 11_anonymous
2: move(11_anonymous)
3: 13_anonymous := Int(1)
4: 14_anonymous := Int(0)
5: 15_@greater_than_result = 13_anonymous > 14_anonymous
6: move(13_anonymous)
7: move(14_anonymous)
8: if 15_@greater_than_result then 16_block else 18_block

block_16
0: borrow(12_test_val)
1: @39( let 12_test_val,)
2: borrow_end(12_test_val)
3: move(12_test_val)
4: @42( owned 12_test_val,)

block_18
0: borrow(12_test_val)
1: @39( let 12_test_val,)
2: borrow_end(12_test_val)
3: move(12_test_val)
4: @42( owned 12_test_val,)

block_17
0: return

block_17
0: return

fn 39:
block_19
0: 20_val = fnarg
1: return

fn 42:
block_21
0: 22_val = fnarg
1: return
