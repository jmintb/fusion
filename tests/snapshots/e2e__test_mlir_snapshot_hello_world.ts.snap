---
source: tests/e2e.rs
expression: "String::from_utf8(cmd.ok().unwrap().stdout)?"
---
function decl fdopen
function decl fclose
function decl fwrite
function decl print
return val Some(Value(
%0 = llvm.call @fwrite(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (!llvm.ptr, i32, i32, !llvm.ptr) -> i32)) 
function decl main
return val None 
"builtin.module"() ({
  "llvm.func"() <{CConv = #llvm.cconv<ccc>, function_type = !llvm.func<ptr (i32, ptr)>, linkage = #llvm.linkage<external>, sym_name = "fdopen", visibility_ = 0 : i64}> ({
  }) {llvm.emit_c_interface, sym_visibility = "private"} : () -> ()
  "llvm.func"() <{CConv = #llvm.cconv<ccc>, function_type = !llvm.func<void (ptr)>, linkage = #llvm.linkage<external>, sym_name = "fclose", visibility_ = 0 : i64}> ({
  }) {llvm.emit_c_interface, sym_visibility = "private"} : () -> ()
  "llvm.func"() <{CConv = #llvm.cconv<ccc>, function_type = !llvm.func<i32 (ptr, i32, i32, ptr)>, linkage = #llvm.linkage<external>, sym_name = "fwrite", visibility_ = 0 : i64}> ({
  }) {llvm.emit_c_interface, sym_visibility = "private"} : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = !llvm.array<1 x i8>, linkage = #llvm.linkage<internal>, sym_name = "annonstr0", value = "w", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32) -> (), sym_name = "print"}> ({
  ^bb0(%arg0: !llvm.ptr, %arg1: i32):
    %0 = "arith.constant"() <{value = 1 : i32}> : () -> i32
    %1 = "llvm.mlir.addressof"() <{global_name = @annonstr0}> : () -> !llvm.ptr
    %2 = "llvm.call"(%0, %1) <{callee = @fdopen, fastmathFlags = #llvm.fastmath<none>}> : (i32, !llvm.ptr) -> !llvm.ptr
    %3 = "arith.constant"() <{value = 1 : i32}> : () -> i32
    %4 = "llvm.call"(%arg0, %arg1, %3, %2) <{callee = @fwrite, fastmathFlags = #llvm.fastmath<none>}> : (!llvm.ptr, i32, i32, !llvm.ptr) -> i32
    "func.return"() : () -> ()
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = !llvm.array<12 x i8>, linkage = #llvm.linkage<internal>, sym_name = "annonstr1", value = "hello world!", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "func.func"() <{function_type = () -> (), sym_name = "main"}> ({
    %0 = "llvm.mlir.addressof"() <{global_name = @annonstr1}> : () -> !llvm.ptr
    "func.call"(%0) <{callee = @print}> : (!llvm.ptr) -> ()
    "func.return"() : () -> ()
  }) {llvm.emit_c_interface} : () -> ()
}) : () -> ()


